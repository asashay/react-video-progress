{"version":3,"sources":["../../src/types.ts","../../src/index.tsx","../../src/helpers.ts","App.js","index.js"],"names":["START","LINE_TYPE","VideoProgress","pathColor","pathWidth","progressStart","BottomLeft","type","OneLine","wrapperStyle","wrapperClassName","onLoadedMetadata","onTimeUpdate","videoProps","containerRef","React","duration","setDuration","currentTime","setCurrentTime","current","width","height","getLengthes","path","top","right","bottom","left","commonStyles","position","zIndex","backgroundColor","animation","progressType","leftBar","topBar","rightBar","bottomBar","getBarsPositions","style","display","className","ref","e","App","testRef","useRef","justifyContent","alignItems","flexDirection","controls","src","TwoLines","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c11d5c84.chunk.js","sourcesContent":["export enum START {\n  BottomLeft = 'BottomLeft',\n  TopLeft = 'TopLeft',\n  TopRight = 'TopRight',\n  BottomRight = 'BottomRight'\n}\n\nexport enum LINE_TYPE {\n  OneLine = 'OneLine',\n  TwoLines = 'TwoLines'\n}\n\nexport interface VideoProps extends React.ComponentPropsWithoutRef<'video'> {\n  pathColor?: string\n  pathWidth?: string\n  progressStart?: START\n  type?: LINE_TYPE\n  wrapperStyle?: React.CSSProperties\n  wrapperClassName?: string\n  onLoadedMetadata?(e: React.SyntheticEvent<HTMLVideoElement>): void\n  onTimeUpdate?(e: React.SyntheticEvent<HTMLVideoElement>): void\n}\n\nexport type Ref = HTMLVideoElement | null\n","import * as React from 'react'\nimport { Ref, VideoProps, START, LINE_TYPE } from './types'\nimport { getBarsPositions, getLengthes } from './helpers'\n\n// import styles from './styles.module.css'\n\nexport const VideoProgress = React.forwardRef<Ref, VideoProps>(\n  (\n    {\n      pathColor = 'red',\n      pathWidth = '3px',\n      progressStart = START.BottomLeft,\n      type = LINE_TYPE.OneLine,\n      wrapperStyle = {},\n      wrapperClassName = '',\n      onLoadedMetadata = () => {},\n      onTimeUpdate = () => {},\n      ...videoProps\n    },\n    ref?\n  ) => {\n    const containerRef = React.useRef<HTMLDivElement | null>(null)\n    const [duration, setDuration] = React.useState(0)\n    const [currentTime, setCurrentTime] = React.useState(0)\n\n    const {\n      width,\n      height\n    } = containerRef?.current?.getBoundingClientRect() ?? {\n      width: 0,\n      height: 0\n    }\n    const totalLength = (width + height) * (type === LINE_TYPE.TwoLines ? 1 : 2)\n    const step = totalLength / duration\n    const path = currentTime * step\n\n    const { top, right, bottom, left } = getLengthes({\n      path,\n      width,\n      height,\n      progressStart,\n      type\n    })\n\n    const commonStyles: React.CSSProperties = {\n      position: 'absolute',\n      zIndex: 2,\n      backgroundColor: pathColor,\n      animation: '1s linear'\n    }\n\n    const { leftBar, topBar, rightBar, bottomBar } = getBarsPositions(\n      progressStart,\n      type\n    )\n\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          position: 'relative',\n          ...wrapperStyle\n        }}\n        className={wrapperClassName}\n        ref={containerRef}\n      >\n        <div\n          data-testid='left'\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${left}px`,\n            ...leftBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${top}px`,\n            height: `${pathWidth}`,\n            ...topBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${right}px`,\n            ...rightBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${bottom}px`,\n            height: `${pathWidth}`,\n            ...bottomBar\n          }}\n        />\n        <video\n          ref={ref}\n          onLoadedMetadata={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setDuration(e.currentTarget.duration)\n            onLoadedMetadata(e)\n          }}\n          onTimeUpdate={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setCurrentTime(e.currentTarget.currentTime)\n            onTimeUpdate(e)\n          }}\n          {...videoProps}\n        />\n      </div>\n    )\n  }\n)\n\nexport * from './types'\n","import { START, LINE_TYPE } from './types'\n\nexport function getLengthes({\n  path,\n  width,\n  height,\n  progressStart,\n  type\n}: {\n  path: number\n  width: number\n  height: number\n  progressStart: START\n  type: LINE_TYPE\n}) {\n  let top = 0\n  let right = 0\n  let bottom = 0\n  let left = 0\n\n  if (type === LINE_TYPE.OneLine) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        left = path > height ? height : path\n        top = path > height + width ? width : path - height\n        right = path > height * 2 + width ? height : path - height - width\n        bottom =\n          path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case START.TopLeft:\n        top = path > width ? width : path\n        right = path > height + width ? height : path - width\n        bottom = path > width * 2 + height ? width : path - height - width\n        left =\n          path > height * 2 + width * 2 ? height : path - height * 2 - width\n        break\n      case START.TopRight:\n        right = path > height ? height : path\n        bottom = path > height + width ? width : path - height\n        left = path > height * 2 + width ? height : path - height - width\n        top = path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case START.BottomRight:\n        bottom = path > width ? width : path\n        left = path > height + width ? height : path - width\n        top = path > width * 2 + height ? width : path - height - width\n        right =\n          path > height * 2 + width * 2 ? height : path - width * 2 - height\n        break\n    }\n  } else if (type === LINE_TYPE.TwoLines) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        left = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case START.TopLeft:\n        left = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case START.TopRight:\n        right = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n      case START.BottomRight:\n        right = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n    }\n  }\n\n  return {\n    top: top > 0 ? top : 0,\n    right: right > 0 ? right : 0,\n    bottom: bottom > 0 ? bottom : 0,\n    left: left > 0 ? left : 0\n  }\n}\n\nexport function getBarsPositions(\n  progressStart: START,\n  progressType: LINE_TYPE\n) {\n  const leftBar: React.CSSProperties = { left: 0 }\n  const topBar: React.CSSProperties = { top: 0 }\n  const rightBar: React.CSSProperties = { right: 0 }\n  const bottomBar: React.CSSProperties = { bottom: 0 }\n  if (progressType === LINE_TYPE.OneLine) {\n    switch (progressStart) {\n      case START.BottomLeft:\n      case START.TopLeft:\n      case START.TopRight:\n      case START.BottomRight:\n        leftBar.bottom = 0\n        topBar.left = 0\n        rightBar.top = 0\n        bottomBar.right = 0\n        break\n    }\n  } else if (progressType === LINE_TYPE.TwoLines) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        leftBar.bottom = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.bottom = 0\n        break\n      case START.TopLeft:\n        leftBar.top = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.top = 0\n        break\n      case START.TopRight:\n        leftBar.top = 0\n        bottomBar.right = 0\n        topBar.right = 0\n        rightBar.top = 0\n        break\n      case START.BottomRight:\n        leftBar.bottom = 0\n        topBar.right = 0\n        rightBar.bottom = 0\n        bottomBar.right = 0\n        break\n    }\n  }\n\n  return {\n    leftBar,\n    topBar,\n    rightBar,\n    bottomBar\n  }\n}\n","import React from 'react'\n\nimport { VideoProgress, START, LINE_TYPE } from 'react-video-progress'\nimport 'react-video-progress/dist/index.css'\n\nconst App = () => {\n  const testRef = React.useRef(null);\n  return <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }}>\n    <h1>Usage examples</h1>\n    <h2>With one line:</h2>\n    <VideoProgress\n      progressStart={START.BottomLeft}\n      type={LINE_TYPE.OneLine}\n      pathColor=\"#e63946\"\n      pathWidth=\"4px\"\n      controls\n      src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n      height=\"200px\"\n      ref={testRef}\n    />\n    <h2>With two lines:</h2>\n    <VideoProgress\n      progressStart={START.BottomLeft}\n      type={LINE_TYPE.TwoLines}\n      pathColor=\"#3a86ff\"\n      pathWidth=\"4px\"\n      controls\n      src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n      height=\"200px\"\n      ref={testRef}\n    />\n  </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}