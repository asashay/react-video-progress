{"version":3,"sources":["../../src/types.ts","../../src/index.tsx","../../src/helpers.ts","App.js","index.js"],"names":["START","LINE_TYPE","VideoProgress","pathColor","pathWidth","progressStart","type","wrapperStyle","wrapperClassName","onLoadedMetadata","onTimeUpdate","videoProps","containerRef","React","width","height","top","right","bottom","left","path","getLengthes","currentTime","getTotalLength","commonStyles","position","zIndex","backgroundColor","animation","progressType","leftBar","topBar","rightBar","bottomBar","getBarsPositions","style","display","className","ref","e","setDuration","setCurrentTime","App","testRef","useRef","textAlign","justifyContent","alignItems","flexDirection","marginRight","controls","src","ReactDOM","render","document","getElementById"],"mappings":"mKAAYA,EAOAC,E,sDAPZ,SAAYD,GACVA,0BACAA,oBACAA,sBACAA,4BAJF,CAAYA,MAAZ,KAOA,SAAYC,GACVA,oBACAA,sBACAA,0BAHF,CAAYA,MAAZ,K,MCDaC,EAAgB,qBAC3B,CAAC,EAAD,mBAEIC,iBAFJ,MACE,MADF,MAGIC,iBAHJ,MACE,IADF,MAIIC,qBAJJ,MAIoBL,EAHlB,WADF,MAKIM,YALJ,MAKWL,EAJT,QADF,MAMIM,oBANJ,MACE,GADF,MAOIC,wBAPJ,MACE,GADF,MAQIC,wBARJ,MAQuB,OARvB,MASIC,oBATJ,MASmB,OATnB,EAUOC,EAVP,oI,MAcE,MAAMC,EAAeC,iBAArB,MAdF,EAekCA,mBAAhC,GAfF,mBAeQ,EAfR,KAeQ,EAfR,OAgBwCA,mBAAtC,GAhBF,mBAgBQ,EAhBR,KAgBQ,EAhBR,iBAqBM,OAAAD,QAAY,IAAZA,GAAA,UAAAA,EAAA,6DArBN,QAqBwD,CACpDE,MADoD,EAEpDC,OAAQ,GALJ,EAlBR,EAkBQ,MAEJA,EApBJ,EAoBIA,OApBJ,E,UCL0B,6CAK1BT,IAQA,IAAIU,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EAEA,GAAIb,IAASL,EAAb,QACE,UACE,KAAKD,EAAL,WACEmB,EAAOC,MAAPD,EACAH,EAAMI,EAAOL,EAAPK,IAAgCA,EAAtCJ,EACAC,EAAQG,EAAOL,IAAPK,IAAqCA,IAA7CH,EACAC,EACEE,EAAOL,IAAPK,EAAoBN,EAApBM,EAAwCA,IAAOL,EADjDG,EAEA,MACF,KAAKlB,EAAL,QACEgB,EAAMI,MAANJ,EACAC,EAAQG,EAAOL,EAAPK,IAAiCA,EAAzCH,EACAC,EAASE,EAAON,IAAPM,IAAoCA,IAA7CF,EACAC,EACEC,EAAOL,IAAPK,EAAoBN,EAApBM,EAAyCA,IAAOL,EADlDI,EAEA,MACF,KAAKnB,EAAL,SACEiB,EAAQG,MAARH,EACAC,EAASE,EAAOL,EAAPK,IAAgCA,EAAzCF,EACAC,EAAOC,EAAOL,IAAPK,IAAqCA,IAA5CD,EACAH,EAAMI,EAAOL,IAAPK,EAAoBN,EAApBM,EAAwCA,IAAOL,EAArDC,EACA,MACF,KAAKhB,EAAL,YACEkB,EAASE,MAATF,EACAC,EAAOC,EAAOL,EAAPK,IAAiCA,EAAxCD,EACAH,EAAMI,EAAON,IAAPM,IAAoCA,IAA1CJ,EACAC,EACEG,EAAOL,IAAPK,EAAoBN,EAApBM,EAAyCA,IAAON,EADlDG,OAIC,GAAIX,IAASL,EAAb,SACL,UACE,KAAKD,EAAL,WACEmB,EAAOC,MAAPD,EACAD,EAASE,MAATF,EACAF,EAAMI,EAAOL,EAAPK,IAAgCA,EAAtCJ,EACAC,EAAQG,EAAOL,EAAPK,IAAiCA,EAAzCH,EACA,MACF,KAAKjB,EAAL,QACEmB,EAAOC,MAAPD,EACAH,EAAMI,MAANJ,EACAE,EAASE,EAAOL,EAAPK,IAAgCA,EAAzCF,EACAD,EAAQG,EAAOL,EAAPK,IAAiCA,EAAzCH,EACA,MACF,KAAKjB,EAAL,SACEiB,EAAQG,MAARH,EACAD,EAAMI,MAANJ,EACAE,EAASE,EAAOL,EAAPK,IAAgCA,EAAzCF,EACAC,EAAOC,EAAOL,EAAPK,IAAiCA,EAAxCD,EACA,MACF,KAAKnB,EAAL,YACEiB,EAAQG,MAARH,EACAC,EAASE,MAATF,EACAF,EAAMI,EAAOL,EAAPK,IAAgCA,EAAtCJ,EACAG,EAAOC,EAAOL,EAAPK,IAAiCA,EAAxCD,OAGKb,IAASL,EAAb,aACLiB,EAASE,MAATF,GAGF,MAAO,CACLF,IAAKA,MADA,EAELC,MAAOA,MAFF,EAGLC,OAAQA,MAHH,EAILC,KAAMA,MAAkB,GDjDaE,CAAY,MAFpCC,GC4HjB,UAA+B,+BAG7BjB,IAMA,UACE,KAAKJ,EAAL,QACE,UAAQa,EAAD,GACT,KAAKb,EAAL,SACE,OAAOa,EAAP,EACF,KAAKb,EAAL,WACE,SACF,QACE,UD/IkBsB,CAAe,kBAAiBlB,cAAeC,IACnE,GAGiD,iBAI/CD,cAJ+C,EAK/CC,SALI,EA7BR,EA6BQ,MA7BR,EA6BQ,QA7BR,EA6BQ,OAAsBa,EA7B9B,EA6B8BA,KAQtBK,EAAoC,CACxCC,SADwC,WAExCC,OAFwC,EAGxCC,gBAHwC,EAIxCC,UAAW,aAzCf,ECkFF,SACEvB,EACAwB,GAEA,MAAMC,EAA+B,CAAEX,KAAM,GACvCY,EAA8B,CAAEf,IAAK,GACrCgB,EAAgC,CAAEf,MAAO,GACzCgB,EAAiC,CAAEf,OAAQ,GACjD,GAAIW,IAAiB5B,EAArB,QACE,UACE,KAAKD,EAAL,WACA,KAAKA,EAAL,QACA,KAAKA,EAAL,SACA,KAAKA,EAAL,YACE8B,WACAC,SACAC,QACAC,eAGC,GAAIJ,IAAiB5B,EAArB,SACL,UACE,KAAKD,EAAL,WACE8B,WACAG,SACAF,SACAC,WACA,MACF,KAAKhC,EAAL,QACE8B,QACAG,SACAF,SACAC,QACA,MACF,KAAKhC,EAAL,SACE8B,QACAG,UACAF,UACAC,QACA,MACF,KAAKhC,EAAL,YACE8B,WACAC,UACAC,WACAC,eAGC,GAAIJ,IAAiB5B,EAArB,WACL,UACE,KAAKD,EAAL,WACEiC,SACA,MACF,KAAKjC,EAAL,YACEiC,UACA,MACF,QACEA,SAKN,MAAO,+BAILA,aDvGiDC,CAAiB,EAAlE,GAAM,EA5CR,EA4CQ,UA5CR,EA4CQ,SA5CR,EA4CQ,SAA6BD,EA5CrC,EA4CqCA,UAKnC,OACE,+BACEE,MAAK,aACHC,QADK,eAELX,SAFK,YAGFlB,GAEL8B,UAAW7B,EACX8B,IAAK1B,GAEL,+B,cACc,OACZuB,MAAK,2BAAE,GAAF,IAEHrB,MAAO,GAAF,OAFA,GAGLC,OAAQ,GAAF,OAHD,EAGC,OACHe,KAGP,+BACEK,MAAK,2BAAE,GAAF,IAEHrB,MAAO,GAAF,OAFA,EAEA,MACLC,OAAQ,GAAF,OAHD,IAIFgB,KAGP,+BACEI,MAAK,2BAAE,GAAF,IAEHrB,MAAO,GAAF,OAFA,GAGLC,OAAQ,GAAF,OAHD,EAGC,OACHiB,KAGP,+BACEG,MAAK,2BAAE,GAAF,IAEHrB,MAAO,GAAF,OAFA,EAEA,MACLC,OAAQ,GAAF,OAHD,IAIFkB,KAGPpB,+CACEsB,MAAO,CAAEC,QAAS,SAClBE,IAAKA,EACL7B,iBAAmB8B,IACjBC,EAAYD,gBAAZC,UACA/B,MAEFC,aAAe6B,IACbE,EAAeF,gBAAfE,aACA/B,OApDR,OEMWgC,MA1DH,KACV,MAAMC,EAAU9B,IAAM+B,OAAO,MAC7B,OAAO,6BACL,wBAAIT,MAAO,CAACU,UAAW,WAAvB,kBACA,yBAAKV,MAAO,CACVC,QAAS,OACTU,eAAgB,WAEhB,yBAAKX,MAAO,CACVC,QAAS,OACTU,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfC,YAAa,SAEb,8CACA,kBAAC/C,EAAD,CACEG,cAAe,aACfC,KAAM,UACNH,UAAU,UACVC,UAAU,MACV8C,UAAQ,EACRC,IAAI,oFACJpC,OAAO,QACPuB,IAAKK,IAEP,sDACA,kBAACzC,EAAD,CACEI,KAAM,aACNH,UAAU,UACVC,UAAU,MACV8C,UAAQ,EACRC,IAAI,oFACJpC,OAAO,QACPuB,IAAKK,KAGT,yBAAKR,MAAO,CACVC,QAAS,OACTW,WAAY,SACZC,cAAe,WAEf,+CACA,kBAAC9C,EAAD,CACEG,cAAe,aACfC,KAAM,WACNH,UAAU,UACVC,UAAU,MACV8C,UAAQ,EACRC,IAAI,oFACJpC,OAAO,QACPuB,IAAKK,QCjDfS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.5b712ad4.chunk.js","sourcesContent":["export enum START {\n  BottomLeft = 'BottomLeft',\n  TopLeft = 'TopLeft',\n  TopRight = 'TopRight',\n  BottomRight = 'BottomRight'\n}\n\nexport enum LINE_TYPE {\n  OneLine = 'OneLine',\n  TwoLines = 'TwoLines',\n  BottomLine = 'BottomLine'\n}\n\nexport interface VideoProps extends React.ComponentPropsWithoutRef<'video'> {\n  pathColor?: string\n  pathWidth?: string\n  progressStart?: START\n  type?: LINE_TYPE\n  wrapperStyle?: React.CSSProperties\n  wrapperClassName?: string\n  onLoadedMetadata?(e: React.SyntheticEvent<HTMLVideoElement>): void\n  onTimeUpdate?(e: React.SyntheticEvent<HTMLVideoElement>): void\n}\n\nexport type Ref = HTMLVideoElement | null\n","import * as React from 'react'\nimport { Ref, VideoProps, START, LINE_TYPE } from './types'\nimport { getBarsPositions, getLengthes, getTotalLength } from './helpers'\n\n// import styles from './styles.module.css'\n\nexport const VideoProgress = React.forwardRef<Ref, VideoProps>(\n  (\n    {\n      pathColor = 'red',\n      pathWidth = '0',\n      progressStart = START.BottomLeft,\n      type = LINE_TYPE.OneLine,\n      wrapperStyle = {},\n      wrapperClassName = '',\n      onLoadedMetadata = () => {},\n      onTimeUpdate = () => {},\n      ...videoProps\n    },\n    ref?\n  ) => {\n    const containerRef = React.useRef<HTMLDivElement | null>(null)\n    const [duration, setDuration] = React.useState(0)\n    const [currentTime, setCurrentTime] = React.useState(0)\n\n    const {\n      width,\n      height\n    } = containerRef?.current?.getBoundingClientRect() ?? {\n      width: 0,\n      height: 0\n    }\n    const totalLength = getTotalLength({ width, height, progressStart: type })\n    const step = totalLength / duration\n    const path = currentTime * step\n\n    const { top, right, bottom, left } = getLengthes({\n      path,\n      width,\n      height,\n      progressStart,\n      type\n    })\n\n    const commonStyles: React.CSSProperties = {\n      position: 'absolute',\n      zIndex: 2,\n      backgroundColor: pathColor,\n      animation: '1s linear'\n    }\n\n    const { leftBar, topBar, rightBar, bottomBar } = getBarsPositions(\n      progressStart,\n      type\n    )\n\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          position: 'relative',\n          ...wrapperStyle\n        }}\n        className={wrapperClassName}\n        ref={containerRef}\n      >\n        <div\n          data-testid='left'\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${left}px`,\n            ...leftBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${top}px`,\n            height: `${pathWidth}`,\n            ...topBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${right}px`,\n            ...rightBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${bottom}px`,\n            height: `${pathWidth}`,\n            ...bottomBar\n          }}\n        />\n        <video\n          style={{ display: 'block' }}\n          ref={ref}\n          onLoadedMetadata={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setDuration(e.currentTarget.duration)\n            onLoadedMetadata(e)\n          }}\n          onTimeUpdate={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setCurrentTime(e.currentTarget.currentTime)\n            onTimeUpdate(e)\n          }}\n          {...videoProps}\n        />\n      </div>\n    )\n  }\n)\n\nexport * from './types'\n","import { START, LINE_TYPE } from './types'\n\nexport function getLengthes({\n  path,\n  width,\n  height,\n  progressStart,\n  type\n}: {\n  path: number\n  width: number\n  height: number\n  progressStart: START\n  type: LINE_TYPE\n}) {\n  let top = 0\n  let right = 0\n  let bottom = 0\n  let left = 0\n\n  if (type === LINE_TYPE.OneLine) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        left = path > height ? height : path\n        top = path > height + width ? width : path - height\n        right = path > height * 2 + width ? height : path - height - width\n        bottom =\n          path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case START.TopLeft:\n        top = path > width ? width : path\n        right = path > height + width ? height : path - width\n        bottom = path > width * 2 + height ? width : path - height - width\n        left =\n          path > height * 2 + width * 2 ? height : path - height * 2 - width\n        break\n      case START.TopRight:\n        right = path > height ? height : path\n        bottom = path > height + width ? width : path - height\n        left = path > height * 2 + width ? height : path - height - width\n        top = path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case START.BottomRight:\n        bottom = path > width ? width : path\n        left = path > height + width ? height : path - width\n        top = path > width * 2 + height ? width : path - height - width\n        right =\n          path > height * 2 + width * 2 ? height : path - width * 2 - height\n        break\n    }\n  } else if (type === LINE_TYPE.TwoLines) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        left = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case START.TopLeft:\n        left = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case START.TopRight:\n        right = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n      case START.BottomRight:\n        right = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n    }\n  } else if (type === LINE_TYPE.BottomLine) {\n    bottom = path > width ? width : path\n  }\n\n  return {\n    top: top > 0 ? top : 0,\n    right: right > 0 ? right : 0,\n    bottom: bottom > 0 ? bottom : 0,\n    left: left > 0 ? left : 0\n  }\n}\n\nexport function getBarsPositions(\n  progressStart: START,\n  progressType: LINE_TYPE\n) {\n  const leftBar: React.CSSProperties = { left: 0 }\n  const topBar: React.CSSProperties = { top: 0 }\n  const rightBar: React.CSSProperties = { right: 0 }\n  const bottomBar: React.CSSProperties = { bottom: 0 }\n  if (progressType === LINE_TYPE.OneLine) {\n    switch (progressStart) {\n      case START.BottomLeft:\n      case START.TopLeft:\n      case START.TopRight:\n      case START.BottomRight:\n        leftBar.bottom = 0\n        topBar.left = 0\n        rightBar.top = 0\n        bottomBar.right = 0\n        break\n    }\n  } else if (progressType === LINE_TYPE.TwoLines) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        leftBar.bottom = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.bottom = 0\n        break\n      case START.TopLeft:\n        leftBar.top = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.top = 0\n        break\n      case START.TopRight:\n        leftBar.top = 0\n        bottomBar.right = 0\n        topBar.right = 0\n        rightBar.top = 0\n        break\n      case START.BottomRight:\n        leftBar.bottom = 0\n        topBar.right = 0\n        rightBar.bottom = 0\n        bottomBar.right = 0\n        break\n    }\n  } else if (progressType === LINE_TYPE.BottomLine) {\n    switch (progressStart) {\n      case START.BottomLeft:\n        bottomBar.left = 0\n        break\n      case START.BottomRight:\n        bottomBar.right = 0\n        break\n      default:\n        bottomBar.left = 0\n        break\n    }\n  }\n\n  return {\n    leftBar,\n    topBar,\n    rightBar,\n    bottomBar\n  }\n}\n\nexport function getTotalLength({\n  width,\n  height,\n  progressStart\n}: {\n  width: number\n  height: number\n  progressStart: LINE_TYPE\n}): number {\n  switch (progressStart) {\n    case LINE_TYPE.OneLine:\n      return (width + height) * 2\n    case LINE_TYPE.TwoLines:\n      return width + height\n    case LINE_TYPE.BottomLine:\n      return width\n    default:\n      return 0\n  }\n}\n","import React from 'react'\n\nimport { VideoProgress } from 'react-video-progress'\n\nconst App = () => {\n  const testRef = React.useRef(null);\n  return <div>\n    <h1 style={{textAlign: 'center'}}>Usage examples</h1>\n    <div style={{\n      display: 'flex',\n      justifyContent: 'center',\n    }}>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        marginRight: '20px'\n      }}>\n        <h2>With one line:</h2>\n        <VideoProgress\n          progressStart={'BottomLeft'}\n          type={'OneLine'}\n          pathColor=\"#e63946\"\n          pathWidth=\"4px\"\n          controls\n          src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n          height=\"200px\"\n          ref={testRef}\n        />\n        <h2>With only bottom line:</h2>\n        <VideoProgress\n          type={'BottomLine'}\n          pathColor=\"#06d6a0\"\n          pathWidth=\"4px\"\n          controls\n          src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n          height=\"200px\"\n          ref={testRef}\n        />\n      </div>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n      }}>\n        <h2>With two lines:</h2>\n        <VideoProgress\n          progressStart={'BottomLeft'}\n          type={'TwoLines'}\n          pathColor=\"#3a86ff\"\n          pathWidth=\"4px\"\n          controls\n          src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n          height=\"200px\"\n          ref={testRef}\n        />\n      </div>\n    </div>\n  </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}