{"version":3,"sources":["../../src/types.ts","../../src/index.tsx","App.js","index.js"],"names":["StartOptions","ProgressTypes","VideoProgress","pathColor","pathWidth","progressStart","type","wrapperStyle","wrapperClassName","onLoadedMetadata","onTimeUpdate","videoProps","containerRef","React","width","height","top","right","bottom","left","path","getLengthes","currentTime","commonStyles","position","zIndex","backgroundColor","animation","progressType","leftBar","topBar","rightBar","bottomBar","getBarsPositions","style","display","className","ref","e","setDuration","setCurrentTime","App","testRef","useRef","justifyContent","alignItems","flexDirection","controls","src","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c041230b.chunk.js","sourcesContent":["export enum StartOptions {\n  BottomLeft = 'BottomLeft',\n  TopLeft = 'TopLeft',\n  TopRight = 'TopRight',\n  BottomRight = 'BottomRight'\n}\n\nexport enum ProgressTypes {\n  OneLine = 'OneLine',\n  TwoLines = 'TwoLines'\n}\n\nexport interface VideoProps extends React.ComponentPropsWithoutRef<'video'> {\n  pathColor?: string\n  pathWidth?: string\n  progressStart?: StartOptions\n  type?: ProgressTypes\n  wrapperStyle?: React.CSSProperties\n  wrapperClassName?: string\n  onLoadedMetadata?(e: React.SyntheticEvent<HTMLVideoElement>): void\n  onTimeUpdate?(e: React.SyntheticEvent<HTMLVideoElement>): void\n}\n\nexport type Ref = HTMLVideoElement | null\n","import * as React from 'react'\nimport { Ref, VideoProps, StartOptions, ProgressTypes } from './types'\n\n// import styles from './styles.module.css'\n\nexport function getLengthes({\n  path,\n  width,\n  height,\n  progressStart,\n  type\n}: {\n  path: number\n  width: number\n  height: number\n  progressStart: StartOptions\n  type: ProgressTypes\n}) {\n  let top = 0\n  let right = 0\n  let bottom = 0\n  let left = 0\n\n  // travis test\n  if (type === ProgressTypes.OneLine) {\n    switch (progressStart) {\n      case StartOptions.BottomLeft:\n        left = path > height ? height : path\n        top = path > height + width ? width : path - height\n        right = path > height * 2 + width ? height : path - height - width\n        bottom =\n          path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case StartOptions.TopLeft:\n        top = path > width ? width : path\n        right = path > height + width ? height : path - width\n        bottom = path > width * 2 + height ? width : path - height - width\n        left =\n          path > height * 2 + width * 2 ? height : path - height * 2 - width\n        break\n      case StartOptions.TopRight:\n        right = path > height ? height : path\n        bottom = path > height + width ? width : path - height\n        left = path > height * 2 + width ? height : path - height - width\n        top = path > height * 2 + width * 2 ? width : path - height * 2 - width\n        break\n      case StartOptions.BottomRight:\n        bottom = path > width ? width : path\n        left = path > height + width ? height : path - width\n        top = path > width * 2 + height ? width : path - height - width\n        right =\n          path > height * 2 + width * 2 ? height : path - width * 2 - height\n        break\n    }\n  } else if (type === ProgressTypes.TwoLines) {\n    switch (progressStart) {\n      case StartOptions.BottomLeft:\n        left = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case StartOptions.TopLeft:\n        left = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        right = path > height + width ? height : path - width\n        break\n      case StartOptions.TopRight:\n        right = path > height ? height : path\n        top = path > width ? width : path\n        bottom = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n      case StartOptions.BottomRight:\n        right = path > height ? height : path\n        bottom = path > width ? width : path\n        top = path > height + width ? width : path - height\n        left = path > height + width ? height : path - width\n        break\n    }\n  }\n\n  return {\n    top: top > 0 ? top : 0,\n    right: right > 0 ? right : 0,\n    bottom: bottom > 0 ? bottom : 0,\n    left: left > 0 ? left : 0\n  }\n}\n\nexport function getBarsPositions(\n  progressStart: StartOptions,\n  progressType: ProgressTypes\n) {\n  const leftBar: React.CSSProperties = { left: 0 }\n  const topBar: React.CSSProperties = { top: 0 }\n  const rightBar: React.CSSProperties = { right: 0 }\n  const bottomBar: React.CSSProperties = { bottom: 0 }\n  if (progressType === ProgressTypes.OneLine) {\n    switch (progressStart) {\n      case StartOptions.BottomLeft:\n      case StartOptions.TopLeft:\n      case StartOptions.TopRight:\n      case StartOptions.BottomRight:\n        leftBar.bottom = 0\n        topBar.left = 0\n        rightBar.top = 0\n        bottomBar.right = 0\n        break\n    }\n  } else if (progressType === ProgressTypes.TwoLines) {\n    switch (progressStart) {\n      case StartOptions.BottomLeft:\n        leftBar.bottom = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.bottom = 0\n        break\n      case StartOptions.TopLeft:\n        leftBar.top = 0\n        bottomBar.left = 0\n        topBar.left = 0\n        rightBar.top = 0\n        break\n      case StartOptions.TopRight:\n        leftBar.top = 0\n        bottomBar.right = 0\n        topBar.right = 0\n        rightBar.top = 0\n        break\n      case StartOptions.BottomRight:\n        leftBar.bottom = 0\n        topBar.right = 0\n        rightBar.bottom = 0\n        bottomBar.right = 0\n        break\n    }\n  }\n\n  return {\n    leftBar,\n    topBar,\n    rightBar,\n    bottomBar\n  }\n}\n\nexport const VideoProgress = React.forwardRef<Ref, VideoProps>(\n  (\n    {\n      pathColor = 'red',\n      pathWidth = '5px',\n      progressStart = StartOptions.BottomLeft,\n      type = ProgressTypes.OneLine,\n      wrapperStyle = {},\n      wrapperClassName = '',\n      onLoadedMetadata = () => {},\n      onTimeUpdate = () => {},\n      ...videoProps\n    },\n    ref?\n  ) => {\n    const containerRef = React.useRef<HTMLDivElement | null>(null)\n    const [duration, setDuration] = React.useState(0)\n    const [currentTime, setCurrentTime] = React.useState(0)\n\n    const {\n      width,\n      height\n    } = containerRef?.current?.getBoundingClientRect() ?? {\n      width: 0,\n      height: 0\n    }\n    const totalLength =\n      (width + height) * (type === ProgressTypes.TwoLines ? 1 : 2)\n    const step = totalLength / duration\n    const path = currentTime * step\n\n    const { top, right, bottom, left } = getLengthes({\n      path,\n      width,\n      height,\n      progressStart,\n      type\n    })\n\n    const commonStyles: React.CSSProperties = {\n      position: 'absolute',\n      zIndex: 2,\n      backgroundColor: pathColor,\n      animation: '1s linear'\n    }\n\n    const { leftBar, topBar, rightBar, bottomBar } = getBarsPositions(\n      progressStart,\n      type\n    )\n\n    return (\n      <div\n        style={{\n          display: 'inline-block',\n          position: 'relative',\n          ...wrapperStyle\n        }}\n        className={wrapperClassName}\n        ref={containerRef}\n      >\n        <div\n          data-testid='left'\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${left}px`,\n            ...leftBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${top}px`,\n            height: `${pathWidth}`,\n            ...topBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${pathWidth}`,\n            height: `${right}px`,\n            ...rightBar\n          }}\n        />\n        <div\n          style={{\n            ...commonStyles,\n            width: `${bottom}px`,\n            height: `${pathWidth}`,\n            ...bottomBar\n          }}\n        />\n        <video\n          ref={ref}\n          onLoadedMetadata={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setDuration(e.currentTarget.duration)\n            onLoadedMetadata(e)\n          }}\n          onTimeUpdate={(e: React.SyntheticEvent<HTMLVideoElement>) => {\n            setCurrentTime(e.currentTarget.currentTime)\n            onTimeUpdate(e)\n          }}\n          {...videoProps}\n        />\n      </div>\n    )\n  }\n)\n","import React from 'react'\n\nimport { VideoProgress } from 'react-video-progress'\nimport 'react-video-progress/dist/index.css'\n\nconst App = () => {\n  const testRef = React.useRef(null);\n  return <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }}>\n    <h1>Usage examples</h1>\n    <h2>With one line:</h2>\n    <VideoProgress\n      progressStart=\"BottomLeft\"\n      pathColor=\"red\"\n      pathWidth=\"7px\"\n      type=\"OneLine\"\n      controls\n      src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n      height=\"200px\"\n      ref={testRef}\n    />\n    <h2>With two lines:</h2>\n    <VideoProgress\n      progressStart=\"BottomLeft\"\n      pathColor=\"blue\"\n      pathWidth=\"7px\"\n      type=\"TwoLines\"\n      controls\n      src='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\n      height=\"200px\"\n      ref={testRef}\n    />\n  </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}